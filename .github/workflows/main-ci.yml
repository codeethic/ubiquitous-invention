name: main-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGION: "us-east-2"
  ACCOUNT_NUMBER: ${{ secrets.ACCOUNT_NUMBER }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out repository under $GITHUB_WORKSPACE, so our job can access it
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/pr-ci.yml

      # - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
      #   uses: actions/setup-dotnet@v1.7.2
      #   with:
      #     dotnet-version: ${{ matrix.dotnet-version }}
      
      # - name: Install dependencies
      #   run: dotnet restore ./webapi

      # - name: Build webapi
      #   run: dotnet build ./webapi --configuration Release --no-restore

      # - name: Test webapi
      #   run: dotnet test ./webapi --no-restore --verbosity normal

      # Prepare to push new image
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: todo-app
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./webapi
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

